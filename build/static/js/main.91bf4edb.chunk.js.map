{"version":3,"sources":["misc/AuthService.js","misc/Constants.js","components/client/Register.jsx","components/client/Unsubscribe.jsx","components/client/Login.jsx","components/client/EmailVerification.jsx","Routes.jsx","reportWebVitals.js","index.js"],"names":["AuthService","checkProtected","access_token","cookie","load","userObj","reactLocalStorage","getObject","undefined","JSON","stringify","window","location","emailVerificationStatus","email","getAuth","checkGreeter","getAxiosHeaders","headers","getAxiosUploadHeaders","process","Register","Select","Option","props","submitRegistrationForm","e","setState","isRegistering","errorMessage","preventDefault","axios","post","CONSTANTS","API_BASE_URL","state","regForm","then","response","catch","error","errorResponse","data","regFormErrors","hasOwnProperty","errors","fullName","password","message","isLoading","passwordStrength","setTimeout","event","name","value","target","oldData","this","class","role","style","backgroundImage","backgroundRepeat","backgroundSize","data-content","data-toggle-screen","data-toggle-overlay","length","onSubmit","method","color","size","required","onChange","registrationForm","type","placeholder","Password","minLength","id","onChangeScore","score","className","shortScoreWord","scoreWords","barColors","colors","href","disabled","margin","paddingTop","React","Component","unsubscribe","checkVerificationCode","isVerifying","verificationSuccess","code","resendCodeSuccess","userDetails","params","match","alert","initials","substring","Login","submitLoginForm","resendVerificationCode","checkVerificationCodeOnChange","autoFocus","OTPLength","otpType","cursor","onClick","Routes","exact","path","component","Unsubscribe","EmailVerification","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91bf4edb.chunk.js","sourcesContent":["import cookie from 'react-cookies';\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from \"axios\";\n\nconst AuthService =  {\n    checkProtected: () => {\n        var access_token = cookie.load('access_token');\n\t\t\t\tvar userObj = reactLocalStorage.getObject('userObj');\n\n        if(access_token === undefined || access_token  == \"\"){\n\t\t\t\t\t\twindow.location = \"/logout\"\n\t\t\t\t\t\treturn;\n        }\n\n\t\t\t\tif(JSON.stringify(userObj) === '{}'){\n\t\t\t\t\twindow.location = \"/logout\";\n\t\t\t\t}else if(!userObj.emailVerificationStatus){\n\t\t\t\t\twindow.location = \"/email-verification/check/\"+userObj.email\n        }\n\t\t\t\t\n    },\n\n    getAuth: () => {\n        var userObj = reactLocalStorage.getObject('userObj');\n        var access_token = cookie.load('access_token');\n        if(JSON.stringify(userObj) === '{}' || access_token === ''){\n            window.location = \"/logout\";\n        }   \n        \n        return {\n          \"user\": userObj,\n          \"access_token\": access_token\n        }\n    },\n\n    checkGreeter: () => {\n        var access_token = cookie.load('access_token');\n        var userObj = reactLocalStorage.getObject('userObj');\n        if(access_token !== undefined && userObj.emailVerificationStatus){\n          window.location = \"/dashboard\";\n        }  \n    },\n\n    getAxiosHeaders: () => {\n        var access_token = cookie.load('access_token');\n        return { headers: {\"Authorization\" : `Bearer ${access_token}`} }\n    },\n\n    getAxiosUploadHeaders: () => {\n        var access_token = cookie.load('access_token');\n        return { \n            headers: {\n                \"Authorization\" : `Bearer ${access_token}`, \n                \"content-type\": \"multipart/form-data\"\n            } \n        }\n    }\n};\n\nexport default AuthService;","const Production = {\n    Constants: {\n      \"OBALLOT_URL\": \"https://analog.oballot.com\",\n      \"API_BASE_URL\": \"https://analogapi.oballot.com\",\n    }\n  }\n  \n  const Development = {\n    Constants: {\n      \"ANALOG_URL\": \"http://localhost:7070\",\n      \"API_BASE_URL\": \"http://localhost:5050\",\n    }\n  }\n  \n  // export default process.env.NODE_ENV === 'production' ? Production.Constants : Development.Constants;\n  export default process.env.NODE_ENV === 'production' ? Production.Constants : Development.Constants;","import React, { Fragment } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport axios from 'axios';\nimport AuthService from '../../misc/AuthService';\nimport CONSTANTS from '../../misc/Constants';\nimport { Select, Checkbox, Input } from 'antd';\nimport 'antd/dist/antd.css';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nconst { Option } = Select;\n\nclass Register extends React.Component {\n\n  constructor(props){\n    AuthService.checkGreeter();\n    super(props);\n    this.state = {\n      isLoading: true,\n      passwordStrength: 0,\n      errorMessage: '',\n      isRegistering: false,\n      regForm: {\n        fullName: '',\n        email: '',\n        password: ''\n      },\n      regFormErrors: {\n        fullName: '',\n        email: '',\n        password: ''\n      }\n    }\n\n  }\n\n  componentDidMount (){\n    setTimeout(() => {\n      this.setState({\n        ...this.state,\n        isLoading: false,\n    });\n    }, 1500);\n\n  }\n\n  registrationForm(event, name) {\n    let value = event.target.value;\n    // console.log(\"updating for name = \" + name + \" and val = \" + value);\n    var oldData = this.state.regForm;\n    oldData[name] = value;\n    this.setState({\n      regForm: oldData,\n    });\n  }\n\n  submitRegistrationForm = e => {\n\n      this.setState({\n          isRegistering: true,\n          errorMessage: '',\n        });\n      e.preventDefault();\n\n      axios.post(CONSTANTS.API_BASE_URL + \"/auth/register\", {...this.state.regForm})\n      .then((response) => {\n        window.location = \"/email-verification/check/\" + this.state.regForm.email;\n\n      }).catch((error) => {\n        try{\n          let errorResponse = error.response.data;\n          let regFormErrors = this.state.regFormErrors;\n\n          if(errorResponse.hasOwnProperty(\"errors\")){\n            if(errorResponse.errors.hasOwnProperty(\"fullName\")){\n              regFormErrors.fullName = errorResponse.errors.fullName;\n            }\n\n            if(errorResponse.errors.hasOwnProperty(\"email\")){\n              regFormErrors.email = errorResponse.errors.email;\n            }\n\n            if(errorResponse.errors.hasOwnProperty(\"password\")){\n              regFormErrors.password = errorResponse.errors.password;\n            }\n          }\n\n          let errorMessage = 'Error: Could not connect to server';\n          if(errorResponse.hasOwnProperty(\"message\")){\n            errorMessage = errorResponse.message;\n          }\n\n          this.setState({\n            ...this.state,\n            isRegistering: false,\n            errorMessage: errorMessage,\n            regFormErrors: regFormErrors\n          });\n        }catch(e){\n          window.location = \"/server-offline\";\n        }\n      });\n\n  }\n\n  render(){\n\n    return (\n      <Fragment>\n          <MetaTags>\n          <title>Register - Analog</title>\n          </MetaTags>\n          <div class=\"nk-app-root\">\n\n          {\n            this.state.isLoading ?\n            <div class=\"pre-loader\">\n                <div class=\"text-center\">  \n                    <div class=\"spinner-border\" role=\"status\">    \n                        <span class=\"sr-only\">Loading...</span>  \n                    </div>\n                </div>\n            </div>\n            :\n            <div class=\"nk-split nk-split-page nk-split-md\">\n\n            {/* left content start */}\n            <div style={{backgroundImage: 'url(\"/images/main-left-image.jpg\")', backgroundRepeat: \"round\", backgroundSize: \"cover\"}} class=\"nk-split-content nk-split-stretch bg-lighter d-flex toggle-break-lg toggle-slide toggle-slide-right\" data-content=\"athPromo\" data-toggle-screen=\"lg\" data-toggle-overlay=\"true\"></div>\n            {/* left content end */}\n\n              <div class=\"nk-split-content nk-block-area nk-block-area-column nk-auth-container\">\n                  <div class=\"nk-block nk-block-middle nk-auth-body\">\n                      {/* <div class=\"brand-logo pb-3\">\n                          <a href=\"html/general/index.html\" class=\"logo-link\">\n                              <img class=\"logo-light logo-img logo-img-lg\" src=\"/images/oBallot_logo.svg\" srcset=\"/images/oBallot_logo.svg 2x\" alt=\"logo\" width=\"140\" />\n                              <img class=\"logo-dark logo-img logo-img-lg\" style={{marginLeft: '-12px'}} src=\"/images/oBallot_logo.svg\" srcset=\"/images/oBallot_logo.svg 2x\" alt=\"logo-dark\" width=\"140\" />\n                          </a>\n                      </div> */}\n                      <div class=\"nk-block-head\">\n                          <div class=\"nk-block-head-content\">\n                              <h5 class=\"nk-block-title\">The Movie List</h5>\n                              {/* <p>The Movie List</p> */}\n                          </div>\n                      </div>\n\n                      {\n                        this.state.errorMessage.length > 0 &&\n                        <div class=\"example-alert nk-block-head\">\n                          <div class=\"alert alert-danger alert-icon\">\n                            <em class=\"icon ni ni-cross-circle\"></em> \n                            {/* <strong>Update failed</strong> */}\n                            {this.state.errorMessage}\n                          </div>\n                        </div>\n                      }\n\n                      <form onSubmit={this.submitRegistrationForm} method=\"POST\">\n\n                          <div class=\"form-group\">\n                              <div class=\"form-label-group\">\n                                <label class=\"form-label\">Full name<span style={{color: \"red\"}}> *</span></label>\n                              </div>\n                              <Input size=\"large\" required value={this.state.regForm.fullName} onChange={(e) => {this.registrationForm(e,\"fullName\");}} type=\"text\" class=\"form-control form-control-lg\"  placeholder=\"Enter your full name\" />\n                              {\n                                this.state.regFormErrors.fullName.length > 0 && \n                                <p class=\"text-danger fs-12px\">{this.state.regFormErrors.fullName}</p>\n                              }\n                          </div>\n\n                          <div class=\"form-group\">\n                              <div class=\"form-label-group\">\n                                  <label class=\"form-label\">Email<span style={{color: \"red\"}}> *</span></label>\n                              </div>\n                              <Input size=\"large\" required value={this.state.regForm.email} onChange={(e) => {this.registrationForm(e,\"email\");}} type=\"email\" class=\"form-control form-control-lg\"  placeholder=\"Enter your email address\" />\n                              {\n                                this.state.regFormErrors.email.length > 0 && \n                                <p class=\"text-danger fs-12px\">{this.state.regFormErrors.email}</p>\n                              }\n                          </div>\n                          <div class=\"form-group\">\n                              <div class=\"form-label-group\">\n                                  <label class=\"form-label\">Password (min six characters)<span style={{color: \"red\"}}> *</span></label>\n                              </div>\n                              <div class=\"form-control-wrap\">\n                                  <Input.Password size=\"large\" minLength=\"6\" required value={this.state.regForm.password} onChange={(e) => {this.registrationForm(e,\"password\");}} type=\"password\" class=\"form-control form-control-lg\" id=\"password\" placeholder=\"Enter your password\" />\n                                  { this.state.regForm.password.length > 0 ? <PasswordStrengthBar onChangeScore={(score) => {\n                                    this.setState({\n                                      ...this.state,\n                                      passwordStrength: score\n                                    });\n                                  }} className=\"eg-bar\" shortScoreWord=\"Too short\" scoreWords={this.scoreWords} barColors={this.colors} password={this.state.regForm.password} /> : <span></span> }\n                                  \n                                  {\n                                    this.state.regFormErrors.password.length > 0 && \n                                    <p class=\"text-danger fs-12px\">{this.state.regFormErrors.password}</p>\n                                  }\n                              </div>\n                          </div>\n                          \n                          <div class=\"form-group\">\n                              <p>By subscribing you agree to the analogteams <a href=\"#\" class=\"link-success\">Terms & Condition</a> & <a href=\"#\" class=\"link-success\">Privacy Policy</a></p>\n                              <button disabled={this.state.isRegistering} class=\"btn btn-lg btn-success btn-block\">{ !this.state.isRegistering ? <span>Send Me Movies</span> : <div class=\"spinner-border\" role=\"status\" style={{margin: \"-6px\"}}> </div> }</button>\n                          </div>\n\n                      </form>\n                      <div class=\"form-note-s2 pt-4\"> Already have an account ? <a href=\"/login\" class=\"link-success\">Login instead</a></div>\n                  </div>\n                  <div class=\"nk-block nk-auth-footer\" style={{paddingTop: \"0px\"}}>\n                      <div>\n                          <p>&copy; 2021 movie list. All Rights Reserved.</p>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          }\n          </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Register;","import React, { Fragment } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport axios from 'axios';\n// import OtpInput from 'react-otp-input';\nimport OTPInput, { ResendOTP } from \"otp-input-react\";\nimport AuthService from '../../misc/AuthService';\nimport CONSTANTS from '../../misc/Constants';\nimport { Select, Checkbox, Input } from 'antd';\nimport * as initials from \"initials\";\nimport 'antd/dist/antd.css';\nconst { Option } = Select;\n\nclass unsubscribe extends React.Component {\n\n  constructor(props){\n    AuthService.checkGreeter();\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMessage: '',\n      isVerifying: false,\n      verificationSuccess: false,\n      resendCodeSuccess: false,\n      userDetails: [],\n      email: '',\n    }\n\n  }\n\n  componentDidMount (){\n\n    const { match: { params } } = this.props;\n    \n    if(params.email){\n    this.setState({\n        ...this.state,\n        email: params.email,\n        isLoading: false\n    })\n\n    axios.post(CONSTANTS.API_BASE_URL + \"/auth/get-user-details\", {email: params.email})\n    .then((response) => {\n      this.setState({\n          isLoading: false,\n      });\n      let data = response.data.data;\n      this.setState({\n        userDetails: data,\n    });\n\n    }).catch((error) => {\n        this.setState({\n            isLoading: false,\n        });\n        alert(\"Request Failed\");\n    });\n\n    }\n\n  }\n\n  checkVerificationCode = e => {\n\n      this.setState({\n          isVerifying: true,\n          errorMessage: '',\n        });\n      e.preventDefault();\n\n      axios.post(CONSTANTS.API_BASE_URL + \"/auth/unsubscribe\", {email: this.state.email})\n      .then((response) => {\n        this.setState({\n            verificationSuccess: true,\n            isVerifying: false,\n        });\n\n        setTimeout(() => {\n          window.location = \"/register\";\n        }, 2000);\n        \n\n      }).catch((error) => {\n        try{\n          let errorResponse = error.response.data;\n          let regFormErrors = this.state.regFormErrors;\n\n          if(errorResponse.hasOwnProperty(\"errors\")){\n            if(errorResponse.errors.hasOwnProperty(\"code\")){\n              regFormErrors.code = errorResponse.errors.code;\n            }\n          }\n\n          let errorMessage = 'Error: Could not connect to server';\n          if(errorResponse.hasOwnProperty(\"message\")){\n            errorMessage = errorResponse.message;\n          }\n\n          this.setState({\n            ...this.state,\n            isVerifying: false,\n            errorMessage: errorMessage,\n            regFormErrors: regFormErrors\n          });\n        }catch(e){\n          window.location = \"/server-offline\";\n        }\n      });\n\n  }\n\n  render(){\n\n    return (\n      <Fragment>\n          <MetaTags>\n          <title>Register - Analog</title>\n          </MetaTags>\n          <div class=\"nk-app-root\">\n\n          {\n            this.state.isLoading ?\n            <div class=\"pre-loader\">\n                <div class=\"text-center\">  \n                    <div class=\"spinner-border\" role=\"status\">    \n                        <span class=\"sr-only\">Loading...</span>  \n                    </div>\n                </div>\n            </div>\n            :\n            <div class=\"nk-split nk-split-page nk-split-md\">\n\n            {/* left content start */}\n            <div style={{backgroundImage: 'url(\"/images/main-left-image.jpg\")', backgroundRepeat: \"round\", backgroundSize: \"cover\"}} class=\"nk-split-content nk-split-stretch bg-lighter d-flex toggle-break-lg toggle-slide toggle-slide-right\" data-content=\"athPromo\" data-toggle-screen=\"lg\" data-toggle-overlay=\"true\"></div>\n            {/* left content end */}\n\n              <div class=\"nk-split-content nk-block-area nk-block-area-column nk-auth-container\">\n                  <div class=\"nk-block nk-block-middle nk-auth-body\">\n                      <div class=\"nk-block-head\">\n                          <div class=\"nk-block-head-content\">\n                              <h5 class=\"nk-block-title\">Unsubscribe to our Daily movie recommendations</h5>\n                              {/* <p>The Movie List</p> */}\n                          </div>\n                      </div>\n\n                      {\n                        this.state.verificationSuccess &&\n                        <div class=\"example-alert nk-block-head\">\n                          <div class=\"alert alert-success alert-icon\">\n                            <em class=\"icon ni ni-check\"></em> \n                            <strong>You have successfully Unsubscribed. Redirecting...</strong>\n                          </div>\n                        </div>\n                      }\n\n                      {\n                        this.state.errorMessage.length > 0 &&\n                        <div class=\"example-alert nk-block-head\">\n                          <div class=\"alert alert-danger alert-icon\">\n                            <em class=\"icon ni ni-cross-circle\"></em> \n                            {this.state.errorMessage}\n                          </div>\n                        </div>\n                      }\n\n                      <form onSubmit={this.checkVerificationCode} method=\"POST\">\n                          <div class=\"form-group\">\n\n                          </div>\n                          \n                          <div class=\"form-group\">\n                              <button disabled={this.state.isVerifying} class=\"btn btn-lg btn-success btn-block\">{ !this.state.isVerifying ? <span>Stop Sending Movies</span> : <div class=\"spinner-border\" role=\"status\" style={{margin: \"-6px\"}}> </div> }</button>\n                          </div>\n                      </form>\n                  </div>\n                  <div class=\"nk-block nk-auth-footer\" style={{paddingTop: \"0px\"}}>\n                      <div>\n                          <p>&copy; 2021 movie list. All Rights Reserved.</p>\n                      </div>\n                  </div>\n                  \n              </div>\n              <div style={{margin: \"12px\"}} class=\"user-avatar sm\"><span>{initials(this.state.userDetails[0]).substring(0, 2)}</span></div>\n          </div>\n          }\n          </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default unsubscribe;","import React, { Fragment } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport axios from 'axios';\nimport AuthService from '../../misc/AuthService';\nimport CONSTANTS from '../../misc/Constants';\nimport { Select, Checkbox, Input } from 'antd';\nimport 'antd/dist/antd.css';\nconst { Option } = Select;\n\nclass Login extends React.Component {\n\n  constructor(props){\n    AuthService.checkGreeter();\n    super(props);\n    this.state = {\n      isLoading: true,\n      passwordStrength: 0,\n      errorMessage: '',\n      isRegistering: false,\n      userDetails: [],\n      regForm: {\n        email: '',\n        password: ''\n      },\n      regFormErrors: {\n        email: '',\n        password: ''\n      }\n    }\n\n  }\n\n  componentDidMount (){\n    setTimeout(() => {\n      this.setState({\n        ...this.state,\n        isLoading: false,\n    });\n    }, 1500);\n\n  }\n\n  registrationForm(event, name) {\n    let value = event.target.value;\n    var oldData = this.state.regForm;\n    oldData[name] = value;\n    this.setState({\n      regForm: oldData,\n    });\n  }\n\n  submitLoginForm = e => {\n\n      this.setState({\n          isRegistering: true,\n          errorMessage: '',\n        });\n      e.preventDefault();\n\n      axios.post(CONSTANTS.API_BASE_URL + \"/auth/login\", {...this.state.regForm})\n      .then((response) => {\n\n        let data = response.data.data;\n        this.setState({\n          userDetails: data,\n        });\n        window.location = \"/unsubscribe/\" + this.state.userDetails[1];\n\n      }).catch((error) => {\n        try{\n          let errorResponse = error.response.data;\n          let regFormErrors = this.state.regFormErrors;\n\n          if(errorResponse.hasOwnProperty(\"errors\")){\n\n            if(errorResponse.errors.hasOwnProperty(\"email\")){\n              regFormErrors.email = errorResponse.errors.email;\n            }\n\n            if(errorResponse.errors.hasOwnProperty(\"password\")){\n              regFormErrors.password = errorResponse.errors.password;\n            }\n          }\n\n          let errorMessage = 'Error: Could not connect to server';\n          if(errorResponse.hasOwnProperty(\"message\")){\n            errorMessage = errorResponse.message;\n          }\n\n          this.setState({\n            ...this.state,\n            isRegistering: false,\n            errorMessage: errorMessage,\n            regFormErrors: regFormErrors\n          });\n        }catch(e){\n          window.location = \"/server-offline\";\n        }\n      });\n\n  }\n\n  render(){\n\n    return (\n      <Fragment>\n          <MetaTags>\n          <title>Register - Analog</title>\n          </MetaTags>\n          <div class=\"nk-app-root\">\n\n          {\n            this.state.isLoading ?\n            <div class=\"pre-loader\">\n                <div class=\"text-center\">  \n                    <div class=\"spinner-border\" role=\"status\">    \n                        <span class=\"sr-only\">Loading...</span>  \n                    </div>\n                </div>\n            </div>\n            :\n            <div class=\"nk-split nk-split-page nk-split-md\">\n\n            {/* left content start */}\n            <div style={{backgroundImage: 'url(\"/images/main-left-image.jpg\")', backgroundRepeat: \"round\", backgroundSize: \"cover\"}} class=\"nk-split-content nk-split-stretch bg-lighter d-flex toggle-break-lg toggle-slide toggle-slide-right\" data-content=\"athPromo\" data-toggle-screen=\"lg\" data-toggle-overlay=\"true\"></div>\n            {/* left content end */}\n\n              <div class=\"nk-split-content nk-block-area nk-block-area-column nk-auth-container\">\n                  <div class=\"nk-block nk-block-middle nk-auth-body\">\n                      {/* <div class=\"brand-logo pb-3\">\n                          <a href=\"html/general/index.html\" class=\"logo-link\">\n                              <img class=\"logo-light logo-img logo-img-lg\" src=\"/images/oBallot_logo.svg\" srcset=\"/images/oBallot_logo.svg 2x\" alt=\"logo\" width=\"140\" />\n                              <img class=\"logo-dark logo-img logo-img-lg\" style={{marginLeft: '-12px'}} src=\"/images/oBallot_logo.svg\" srcset=\"/images/oBallot_logo.svg 2x\" alt=\"logo-dark\" width=\"140\" />\n                          </a>\n                      </div> */}\n                      <div class=\"nk-block-head\">\n                          <div class=\"nk-block-head-content\">\n                              <h5 class=\"nk-block-title\">The Movie List</h5>\n                              {/* <p>The Movie List</p> */}\n                          </div>\n                      </div>\n\n                      {\n                        this.state.errorMessage.length > 0 &&\n                        <div class=\"example-alert nk-block-head\">\n                          <div class=\"alert alert-danger alert-icon\">\n                            <em class=\"icon ni ni-cross-circle\"></em> \n                            {/* <strong>Update failed</strong> */}\n                            {this.state.errorMessage}\n                          </div>\n                        </div>\n                      }\n\n                      <form onSubmit={this.submitLoginForm} method=\"POST\">\n\n                          <div class=\"form-group\">\n                              <div class=\"form-label-group\">\n                                  <label class=\"form-label\">Email<span style={{color: \"red\"}}> *</span></label>\n                              </div>\n                              <Input size=\"large\" required value={this.state.regForm.email} onChange={(e) => {this.registrationForm(e,\"email\");}} type=\"email\" class=\"form-control form-control-lg\"  placeholder=\"Enter your email address\" />\n                              {\n                                this.state.regFormErrors.email.length > 0 && \n                                <p class=\"text-danger fs-12px\">{this.state.regFormErrors.email}</p>\n                              }\n                          </div>\n                          <div class=\"form-group\">\n                              <div class=\"form-label-group\">\n                                  <label class=\"form-label\">Password<span style={{color: \"red\"}}> *</span></label>\n                              </div>\n                              <div class=\"form-control-wrap\">\n                                  <Input.Password size=\"large\" minLength=\"6\" required value={this.state.regForm.password} onChange={(e) => {this.registrationForm(e,\"password\");}} type=\"password\" class=\"form-control form-control-lg\" id=\"password\" placeholder=\"Enter your password\" />\n                                  {\n                                    this.state.regFormErrors.password.length > 0 && \n                                    <p class=\"text-danger fs-12px\">{this.state.regFormErrors.password}</p>\n                                  }\n                              </div>\n                          </div>\n                          \n                          <div class=\"form-group\">\n                              <button disabled={this.state.isRegistering} class=\"btn btn-lg btn-success btn-block\">{ !this.state.isRegistering ? <span>Login</span> : <div class=\"spinner-border\" role=\"status\" style={{margin: \"-6px\"}}> </div> }</button>\n                          </div>\n\n                      </form>\n                      <div class=\"form-note-s2 pt-4\"> New on Movie List? <a href=\"/login\" class=\"link-success\">Register instead</a></div>\n                  </div>\n                  <div class=\"nk-block nk-auth-footer\" style={{paddingTop: \"0px\"}}>\n                      <div>\n                          <p>&copy; 2021 movie list. All Rights Reserved.</p>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          }\n          </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Login;","import React, { Fragment } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport axios from 'axios';\n// import OtpInput from 'react-otp-input';\nimport OTPInput, { ResendOTP } from \"otp-input-react\";\nimport AuthService from '../../misc/AuthService';\nimport CONSTANTS from '../../misc/Constants';\nimport { Select, Checkbox, Input } from 'antd';\nimport * as initials from \"initials\";\nimport 'antd/dist/antd.css';\nconst { Option } = Select;\n\nclass Register extends React.Component {\n\n  constructor(props){\n    AuthService.checkGreeter();\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMessage: '',\n      isVerifying: false,\n      verificationSuccess: false,\n      resendCodeSuccess: false,\n      userDetails: [],\n      fullName: '',\n      regForm: {\n        fullName: '',\n        email: '',\n        code: '',\n      },\n      regFormErrors: {\n        fullName: '',\n        code: '',\n      }\n    }\n\n  }\n\n  checkVerificationCodeOnChange(event, name) {\n    // let value = event.target.value;\n    // alert(event);\n\n    // console.log(\"updating for name = \" + name + \" and val = \" + value);\n    var oldData = this.state.regForm;\n    oldData[name] = event;\n    this.setState({\n      regForm: oldData,\n    });\n  }\n\n  componentDidMount (){\n\n    const { match: { params } } = this.props;\n    \n    if(params.email){\n    this.setState({\n        ...this.state,\n        email: params.email,\n        isLoading: false\n    })\n\n    axios.post(CONSTANTS.API_BASE_URL + \"/auth/get-user-details\", {email: params.email})\n    .then((response) => {\n      this.setState({\n          isLoading: false,\n      });\n      let data = response.data.data;\n      this.setState({\n        userDetails: data,\n    });\n\n    }).catch((error) => {\n        this.setState({\n            isLoading: false,\n        });\n        alert(\"Request Failed\");\n    });\n\n    }\n\n  }\n\n  checkVerificationCode = e => {\n\n      this.setState({\n          isVerifying: true,\n          errorMessage: '',\n        });\n      e.preventDefault();\n\n      axios.post(CONSTANTS.API_BASE_URL + \"/auth/confirmEmail\", {...this.state.regForm})\n      .then((response) => {\n        this.setState({\n            verificationSuccess: true,\n            isVerifying: false,\n        });\n\n        setTimeout(() => {\n            window.location = \"/unsubscribe\";\n          }, 2000);\n\n      }).catch((error) => {\n        try{\n          let errorResponse = error.response.data;\n          let regFormErrors = this.state.regFormErrors;\n\n          if(errorResponse.hasOwnProperty(\"errors\")){\n            if(errorResponse.errors.hasOwnProperty(\"code\")){\n              regFormErrors.code = errorResponse.errors.code;\n            }\n          }\n\n          let errorMessage = 'Error: Could not connect to server';\n          if(errorResponse.hasOwnProperty(\"message\")){\n            errorMessage = errorResponse.message;\n          }\n\n          this.setState({\n            ...this.state,\n            isVerifying: false,\n            errorMessage: errorMessage,\n            regFormErrors: regFormErrors\n          });\n        }catch(e){\n          window.location = \"/server-offline\";\n        }\n      });\n\n  }\n\n  resendVerificationCode = e => {\n\n    this.setState({\n        isVerifying: true,\n        errorMessage: '',\n    });\n\n    axios.post(CONSTANTS.API_BASE_URL + \"/auth/resend-code\", {email: this.state.userDetails[1], fullName: this.state.userDetails[0]})\n    .then((response) => {\n      this.setState({\n          resendCodeSuccess: true,\n          isVerifying: false,\n      });\n\n    }).catch((error) => {\n      try{\n        let errorResponse = error.response.data;\n        let regFormErrors = this.state.regFormErrors;\n\n        if(errorResponse.hasOwnProperty(\"errors\")){\n          if(errorResponse.errors.hasOwnProperty(\"code\")){\n            regFormErrors.code = errorResponse.errors.code;\n          }\n        }\n\n        let errorMessage = 'Error: Could not connect to server';\n        if(errorResponse.hasOwnProperty(\"message\")){\n          errorMessage = errorResponse.message;\n        }\n\n        this.setState({\n          ...this.state,\n          isVerifying: false,\n          errorMessage: errorMessage,\n          regFormErrors: regFormErrors\n        });\n      }catch(e){\n        window.location = \"/server-offline\";\n      }\n    });\n\n}\n\n  render(){\n\n    return (\n      <Fragment>\n          <MetaTags>\n          <title>Register - Analog</title>\n          </MetaTags>\n          <div class=\"nk-app-root\">\n\n          {\n            this.state.isLoading ?\n            <div class=\"pre-loader\">\n                <div class=\"text-center\">  \n                    <div class=\"spinner-border\" role=\"status\">    \n                        <span class=\"sr-only\">Loading...</span>  \n                    </div>\n                </div>\n            </div>\n            :\n            <div class=\"nk-split nk-split-page nk-split-md\">\n\n            {/* left content start */}\n            <div style={{backgroundImage: 'url(\"/images/main-left-image.jpg\")', backgroundRepeat: \"round\", backgroundSize: \"cover\"}} class=\"nk-split-content nk-split-stretch bg-lighter d-flex toggle-break-lg toggle-slide toggle-slide-right\" data-content=\"athPromo\" data-toggle-screen=\"lg\" data-toggle-overlay=\"true\"></div>\n            {/* left content end */}\n\n              <div class=\"nk-split-content nk-block-area nk-block-area-column nk-auth-container\">\n                  <div class=\"nk-block nk-block-middle nk-auth-body\">\n                      <div class=\"nk-block-head\">\n                          <div class=\"nk-block-head-content\">\n                              <h5 class=\"nk-block-title\">Hello {this.state.userDetails[2]} we have sent you a verification email Please enter your 5 digit code here </h5>\n                              {/* <p>The Movie List</p> */}\n                          </div>\n                      </div>\n\n                      {\n                        this.state.resendCodeSuccess &&\n                        <div class=\"example-alert nk-block-head\">\n                          <div class=\"alert alert-success alert-icon\">\n                            <em class=\"icon ni ni-check\"></em> \n                            <strong>A new activation code has been sent to your Email</strong>\n                          </div>\n                        </div>\n                      }\n\n                      {\n                        this.state.verificationSuccess &&\n                        <div class=\"example-alert nk-block-head\">\n                          <div class=\"alert alert-success alert-icon\">\n                            <em class=\"icon ni ni-check\"></em> \n                            <strong>Email Verified. You will receive newsletters from us at 9AM (GMT) daily. Redirecting...</strong>\n                          </div>\n                        </div>\n                      }\n\n                      {\n                        this.state.errorMessage.length > 0 &&\n                        <div class=\"example-alert nk-block-head\">\n                          <div class=\"alert alert-danger alert-icon\">\n                            <em class=\"icon ni ni-cross-circle\"></em> \n                            {/* <strong>Update failed</strong> */}\n                            {this.state.errorMessage}\n                          </div>\n                        </div>\n                      }\n\n                      <form onSubmit={this.checkVerificationCode} method=\"POST\">\n\n                          <div class=\"form-group\">\n                              {/* <Input size=\"large\" required value={this.state.regForm.fullName} onChange={(e) => {this.registrationForm(e,\"fullName\");}} type=\"text\" class=\"form-control form-control-lg\" />\n                              {\n                                this.state.regFormErrors.fullName.length > 0 && \n                                <p class=\"text-danger fs-12px\">{this.state.regFormErrors.fullName}</p>\n                              } */}\n\n                            <OTPInput\n                                value={this.state.regForm.code}\n                                onChange={(e) => {this.checkVerificationCodeOnChange(e,\"code\");}}\n                                autoFocus\n                                OTPLength={5}\n                                otpType=\"number\"\n                            />\n\n                          </div>\n                          \n                          <div class=\"form-group\">\n                              <button disabled={this.state.isVerifying} class=\"btn btn-lg btn-success btn-block\">{ !this.state.isVerifying ? <span>Confirm Email Address</span> : <div class=\"spinner-border\" role=\"status\" style={{margin: \"-6px\"}}> </div> }</button>\n                          </div>\n\n                      </form>\n                      <div class=\"form-note-s2 pt-4\"> Didn't get an Email? <span style={{cursor: \"pointer\"}} onClick={()=>{this.resendVerificationCode()}} class=\"link-success\">Re-send Verification</span></div>\n                  </div>\n                  <div class=\"nk-block nk-auth-footer\" style={{paddingTop: \"0px\"}}>\n                      <div>\n                          <p>&copy; 2021 movie list. All Rights Reserved.</p>\n                      </div>\n                  </div>\n                  \n              </div>\n              <div style={{margin: \"12px\"}} class=\"user-avatar sm\"><span>{initials(this.state.userDetails[0]).substring(0, 2)}</span></div>\n          </div>\n          }\n          </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Register;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Register from './components/client/Register';\nimport Unsubscribe from './components/client/Unsubscribe';\nimport Login from './components/client/Login';\nimport EmailVerification from './components/client/EmailVerification';\n\nclass Routes extends React.Component {\n  render(){\n    return (\n      <Router>\n        <Switch>\n          \n          {/* Greeter Routes */}\n          {/* <Route exact path={`${process.env.PUBLIC_URL + \"/\"}`} component={Login} /> */}\n          {/* <Route exact path={`${process.env.PUBLIC_URL + \"/login\"}`} component={Login} /> */}\n          <Route exact path={`${process.env.PUBLIC_URL + \"/register\"}`} component={Register} />\n          <Route exact path={`${process.env.PUBLIC_URL + \"/unsubscribe/:email\"}`} component={Unsubscribe} />\n          <Route exact path={`${process.env.PUBLIC_URL + \"/\"}`} component={Login} />\n          <Route exact path={`${process.env.PUBLIC_URL + \"/email-verification/check/:email\"}`} component={EmailVerification} />\n\n        </Switch>\n      </Router>\n\n    );\n  }\n}\n\nexport default Routes;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}