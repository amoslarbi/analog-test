[{"/Users/khay/workspace/analog-test/src/index.js":"1","/Users/khay/workspace/analog-test/src/reportWebVitals.js":"2","/Users/khay/workspace/analog-test/src/Routes.jsx":"3","/Users/khay/workspace/analog-test/src/components/client/Register.jsx":"4","/Users/khay/workspace/analog-test/src/misc/AuthService.js":"5","/Users/khay/workspace/analog-test/src/misc/Constants.js":"6","/Users/khay/workspace/analog-test/src/components/client/EmailVerification.jsx":"7"},{"size":509,"mtime":1611943273250,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611939315439,"results":"10","hashOfConfig":"9"},{"size":857,"mtime":1612006180839,"results":"11","hashOfConfig":"9"},{"size":9533,"mtime":1612005039346,"results":"12","hashOfConfig":"9"},{"size":1751,"mtime":1611943755697,"results":"13","hashOfConfig":"9"},{"size":459,"mtime":1611943157975,"results":"14","hashOfConfig":"9"},{"size":7034,"mtime":1612010818809,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ec5058",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/khay/workspace/analog-test/src/index.js",[],["33","34"],"/Users/khay/workspace/analog-test/src/reportWebVitals.js",[],"/Users/khay/workspace/analog-test/src/Routes.jsx",[],"/Users/khay/workspace/analog-test/src/components/client/Register.jsx",["35","36","37","38"],"import React, { Fragment } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport axios from 'axios';\nimport AuthService from '../../misc/AuthService';\nimport CONSTANTS from '../../misc/Constants';\nimport { Select, Checkbox, Input } from 'antd';\nimport 'antd/dist/antd.css';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nconst { Option } = Select;\n\nclass Register extends React.Component {\n\n  constructor(props){\n    AuthService.checkGreeter();\n    super(props);\n    this.state = {\n      isLoading: true,\n      passwordStrength: 0,\n      errorMessage: '',\n      isRegistering: false,\n      regForm: {\n        fullName: '',\n        email: '',\n        password: ''\n      },\n      regFormErrors: {\n        fullName: '',\n        email: '',\n        password: ''\n      }\n    }\n\n  }\n\n  componentDidMount (){\n    setTimeout(() => {\n      this.setState({\n        ...this.state,\n        isLoading: false,\n    });\n    }, 1500);\n\n  }\n\n  registrationForm(event, name) {\n    let value = event.target.value;\n    // console.log(\"updating for name = \" + name + \" and val = \" + value);\n    var oldData = this.state.regForm;\n    oldData[name] = value;\n    this.setState({\n      regForm: oldData,\n    });\n  }\n\n  submitRegistrationForm = e => {\n\n      this.setState({\n          isRegistering: true,\n          errorMessage: '',\n        });\n      e.preventDefault();\n\n      axios.post(CONSTANTS.API_BASE_URL + \"/auth/register\", {...this.state.regForm})\n      .then((response) => {\n          alert(\"Good\");\n        window.location = \"/email-verification/check/\" + this.state.regForm.fullName;\n\n      }).catch((error) => {\n        try{\n          let errorResponse = error.response.data;\n          let regFormErrors = this.state.regFormErrors;\n\n          if(errorResponse.hasOwnProperty(\"errors\")){\n            if(errorResponse.errors.hasOwnProperty(\"fullName\")){\n              regFormErrors.fullName = errorResponse.errors.fullName;\n            }\n\n            if(errorResponse.errors.hasOwnProperty(\"email\")){\n              regFormErrors.email = errorResponse.errors.email;\n            }\n\n            if(errorResponse.errors.hasOwnProperty(\"password\")){\n              regFormErrors.password = errorResponse.errors.password;\n            }\n          }\n\n          let errorMessage = 'Error: Could not connect to server';\n          if(errorResponse.hasOwnProperty(\"message\")){\n            errorMessage = errorResponse.message;\n          }\n\n          this.setState({\n            ...this.state,\n            isRegistering: false,\n            errorMessage: errorMessage,\n            regFormErrors: regFormErrors\n          });\n        }catch(e){\n          window.location = \"/server-offline\";\n        }\n      });\n\n  }\n\n  render(){\n\n    return (\n      <Fragment>\n          <MetaTags>\n          <title>Register - Analog</title>\n          </MetaTags>\n          <div class=\"nk-app-root\">\n\n          {\n            this.state.isLoading ?\n            <div class=\"pre-loader\">\n                <div class=\"text-center\">  \n                    <div class=\"spinner-border\" role=\"status\">    \n                        <span class=\"sr-only\">Loading...</span>  \n                    </div>\n                </div>\n            </div>\n            :\n            <div class=\"nk-split nk-split-page nk-split-md\">\n\n            {/* left content start */}\n            <div style={{backgroundImage: 'url(\"/images/main-left-image.jpg\")', backgroundRepeat: \"round\", backgroundSize: \"cover\"}} class=\"nk-split-content nk-split-stretch bg-lighter d-flex toggle-break-lg toggle-slide toggle-slide-right\" data-content=\"athPromo\" data-toggle-screen=\"lg\" data-toggle-overlay=\"true\"></div>\n            {/* left content end */}\n\n              <div class=\"nk-split-content nk-block-area nk-block-area-column nk-auth-container\">\n                  <div class=\"nk-block nk-block-middle nk-auth-body\">\n                      {/* <div class=\"brand-logo pb-3\">\n                          <a href=\"html/general/index.html\" class=\"logo-link\">\n                              <img class=\"logo-light logo-img logo-img-lg\" src=\"/images/oBallot_logo.svg\" srcset=\"/images/oBallot_logo.svg 2x\" alt=\"logo\" width=\"140\" />\n                              <img class=\"logo-dark logo-img logo-img-lg\" style={{marginLeft: '-12px'}} src=\"/images/oBallot_logo.svg\" srcset=\"/images/oBallot_logo.svg 2x\" alt=\"logo-dark\" width=\"140\" />\n                          </a>\n                      </div> */}\n                      <div class=\"nk-block-head\">\n                          <div class=\"nk-block-head-content\">\n                              <h5 class=\"nk-block-title\">The Movie List</h5>\n                              {/* <p>The Movie List</p> */}\n                          </div>\n                      </div>\n\n                      {\n                        this.state.errorMessage.length > 0 &&\n                        <div class=\"example-alert nk-block-head\">\n                          <div class=\"alert alert-danger alert-icon\">\n                            <em class=\"icon ni ni-cross-circle\"></em> \n                            {/* <strong>Update failed</strong> */}\n                            {this.state.errorMessage}\n                          </div>\n                        </div>\n                      }\n\n                      <form onSubmit={this.submitRegistrationForm} method=\"POST\">\n\n                          <div class=\"form-group\">\n                              <div class=\"form-label-group\">\n                                <label class=\"form-label\">Full name<span style={{color: \"red\"}}> *</span></label>\n                              </div>\n                              <Input size=\"large\" required value={this.state.regForm.fullName} onChange={(e) => {this.registrationForm(e,\"fullName\");}} type=\"text\" class=\"form-control form-control-lg\"  placeholder=\"Enter your full name\" />\n                              {\n                                this.state.regFormErrors.fullName.length > 0 && \n                                <p class=\"text-danger fs-12px\">{this.state.regFormErrors.fullName}</p>\n                              }\n                          </div>\n\n                          <div class=\"form-group\">\n                              <div class=\"form-label-group\">\n                                  <label class=\"form-label\">Email<span style={{color: \"red\"}}> *</span></label>\n                              </div>\n                              <Input size=\"large\" required value={this.state.regForm.email} onChange={(e) => {this.registrationForm(e,\"email\");}} type=\"email\" class=\"form-control form-control-lg\"  placeholder=\"Enter your email address\" />\n                              {\n                                this.state.regFormErrors.email.length > 0 && \n                                <p class=\"text-danger fs-12px\">{this.state.regFormErrors.email}</p>\n                              }\n                          </div>\n                          <div class=\"form-group\">\n                              <div class=\"form-label-group\">\n                                  <label class=\"form-label\">Password (min six characters)<span style={{color: \"red\"}}> *</span></label>\n                              </div>\n                              <div class=\"form-control-wrap\">\n                                  <Input.Password size=\"large\" minLength=\"6\" required value={this.state.regForm.password} onChange={(e) => {this.registrationForm(e,\"password\");}} type=\"password\" class=\"form-control form-control-lg\" id=\"password\" placeholder=\"Enter your password\" />\n                                  { this.state.regForm.password.length > 0 ? <PasswordStrengthBar onChangeScore={(score) => {\n                                    this.setState({\n                                      ...this.state,\n                                      passwordStrength: score\n                                    });\n                                  }} className=\"eg-bar\" shortScoreWord=\"Too short\" scoreWords={this.scoreWords} barColors={this.colors} password={this.state.regForm.password} /> : <span></span> }\n                                  \n                                  {\n                                    this.state.regFormErrors.password.length > 0 && \n                                    <p class=\"text-danger fs-12px\">{this.state.regFormErrors.password}</p>\n                                  }\n                              </div>\n                          </div>\n                          \n                          <div class=\"form-group\">\n                              <p>By subscribing you agree to the analogteams <a href=\"#\" class=\"link-success\">Terms & Condition</a> & <a href=\"#\" class=\"link-success\">Privacy Policy</a></p>\n                              <button disabled={this.state.isRegistering} class=\"btn btn-lg btn-success btn-block\">{ !this.state.isRegistering ? <span>Send Me Movies</span> : <div class=\"spinner-border\" role=\"status\" style={{margin: \"-6px\"}}> </div> }</button>\n                          </div>\n\n                      </form>\n                      <div class=\"form-note-s2 pt-4\"> Already have an account ? <a href=\"/login\" class=\"link-success\">Login instead</a></div>\n                  </div>\n                  <div class=\"nk-block nk-auth-footer\" style={{paddingTop: \"0px\"}}>\n                      <div>\n                          <p>&copy; 2021 analogteams. All Rights Reserved.</p>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          }\n          </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Register;","/Users/khay/workspace/analog-test/src/misc/AuthService.js",["39","40"],"import cookie from 'react-cookies';\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from \"axios\";\n\nconst AuthService =  {\n    checkProtected: () => {\n        var access_token = cookie.load('access_token');\n\t\t\t\tvar userObj = reactLocalStorage.getObject('userObj');\n\n        if(access_token === undefined || access_token  == \"\"){\n\t\t\t\t\t\twindow.location = \"/logout\"\n\t\t\t\t\t\treturn;\n        }\n\n\t\t\t\tif(JSON.stringify(userObj) === '{}'){\n\t\t\t\t\twindow.location = \"/logout\";\n\t\t\t\t}else if(!userObj.emailVerificationStatus){\n\t\t\t\t\twindow.location = \"/email-verification/check/\"+userObj.email\n        }\n\t\t\t\t\n    },\n\n    getAuth: () => {\n        var userObj = reactLocalStorage.getObject('userObj');\n        var access_token = cookie.load('access_token');\n        if(JSON.stringify(userObj) === '{}' || access_token === ''){\n            window.location = \"/logout\";\n        }   \n        \n        return {\n          \"user\": userObj,\n          \"access_token\": access_token\n        }\n    },\n\n    checkGreeter: () => {\n        var access_token = cookie.load('access_token');\n        var userObj = reactLocalStorage.getObject('userObj');\n        if(access_token !== undefined && userObj.emailVerificationStatus){\n          window.location = \"/dashboard\";\n        }  \n    },\n\n    getAxiosHeaders: () => {\n        var access_token = cookie.load('access_token');\n        return { headers: {\"Authorization\" : `Bearer ${access_token}`} }\n    },\n\n    getAxiosUploadHeaders: () => {\n        var access_token = cookie.load('access_token');\n        return { \n            headers: {\n                \"Authorization\" : `Bearer ${access_token}`, \n                \"content-type\": \"multipart/form-data\"\n            } \n        }\n    }\n};\n\nexport default AuthService;","/Users/khay/workspace/analog-test/src/misc/Constants.js",[],"/Users/khay/workspace/analog-test/src/components/client/EmailVerification.jsx",["41","42","43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":6,"column":18,"nodeType":"51","messageId":"52","endLine":6,"endColumn":26},{"ruleId":"49","severity":1,"message":"53","line":9,"column":9,"nodeType":"51","messageId":"52","endLine":9,"endColumn":15},{"ruleId":"54","severity":1,"message":"55","line":200,"column":78,"nodeType":"56","endLine":200,"endColumn":111},{"ruleId":"54","severity":1,"message":"55","line":200,"column":135,"nodeType":"56","endLine":200,"endColumn":168},{"ruleId":"49","severity":1,"message":"57","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":10,"column":56,"nodeType":"60","messageId":"61","endLine":10,"endColumn":58},{"ruleId":"49","severity":1,"message":"62","line":5,"column":20,"nodeType":"51","messageId":"52","endLine":5,"endColumn":29},{"ruleId":"49","severity":1,"message":"50","line":8,"column":18,"nodeType":"51","messageId":"52","endLine":8,"endColumn":26},{"ruleId":"49","severity":1,"message":"63","line":8,"column":28,"nodeType":"51","messageId":"52","endLine":8,"endColumn":33},{"ruleId":"49","severity":1,"message":"53","line":10,"column":9,"nodeType":"51","messageId":"52","endLine":10,"endColumn":15},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'Option' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ResendOTP' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]